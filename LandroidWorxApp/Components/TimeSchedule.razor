@using LandroidWorxApp.BusinessLogic

<Row Class="mt-4">
    <Column ColumnSize="ColumnSize.Is4.Is3.OnDesktop">
        <Field>
            <FieldLabel><b>Time Start</b></FieldLabel>
            <TextEdit Class="time-picker" Placeholder="00:00" Text="@Planning.TimeStart.ToString(@"hh\:mm")"  TextChanged ="SetTime" >
            </TextEdit>
        </Field>
    </Column>
    <Column ColumnSize="ColumnSize.Is4.Is3.OnDesktop">
        <Field>
            <FieldLabel><b>Duration</b></FieldLabel>
            <NumericEdit TValue="int" @bind-Value="Planning.Duration" />
        </Field>
    </Column>
    @if (Config.MultiZones != null && Config.MultiZones.Count() > 0)
    {
        <Column ColumnSize="ColumnSize.Is4.Is3.OnDesktop">
            <Field>
                <FieldLabel><b>Zone</b></FieldLabel>
                <SelectEdit TValue="int" @bind-SelectedValue="Planning.Zone">
                    @foreach (var item in Config.MultiZones)
                    {
                        if (item > 0)
                        {
                            <SelectItem Value="Config.MultiZones.ToList().IndexOf(item)">@(Config.MultiZones.ToList().IndexOf(item) + 1)</SelectItem>
                        }
                    }
                </SelectEdit>
            </Field>
        </Column>
    }
    <Column ColumnSize="ColumnSize.IsAuto" Class="align-self-center">
        <Field>
            <FieldLabel>&nbsp;</FieldLabel>
            <CheckEdit @bind-Checked="Planning.CutEdge"><b>Cut Edge</b></CheckEdit>
        </Field>
    </Column>
    <Column ColumnSize="ColumnSize.IsAuto" Class="align-self-center">
        <Field>
            <FieldLabel>&nbsp;</FieldLabel>
            <Button Class="d-block" Color="Color.Danger" Clicked="DeleteTime">Delete Time</Button>
        </Field>

    </Column>
</Row>
<hr />

@code {

    [Parameter]
    public TimePlanning_BL Planning { get; set; }

    [Parameter]
    public LandroidWorxApp.BusinessLogic.Config Config { get; set; }

    [Parameter]
    public EventCallback DeleteTime { get; set; }

    private void SetTime(string value)
    {
        Planning.TimeStart = TimeSpan.TryParse(value, System.Globalization.CultureInfo.CurrentCulture, out TimeSpan result) ? result : new TimeSpan();
    }

}
