@page "/products"
@attribute [Authorize]
@using LandroidWorxApp.BusinessLogic
@inject ILsClientWeb LsClientWeb

<Row Class="justify-content-center">
    @foreach (var item in products)
    {
        string pinCode = item.Pin;
        <Column ColumnSize="ColumnSize.Is6.OnMobile.Is4.OnTablet.Is3.OnDesktop">
            <div class="product text-center p-3">
                <img src="/img/landroid.png" alt="@item.Name" />
                <h2>@item.Name</h2>
                <div class="text-left">
                    <span><b>Serial N:</b> @item.SerialNo</span>
                    <br />
                    <Row>
                        <Column>
                            <span><b>Pin Code:</b> <TextEdit Class="d-inline" IsPlaintext="true" IsDisabled="true" Role="@role" @bind-Text="@pinCode" /></span> 
                        </Column>
                        <Column ColumnSize="ColumnSize.IsAuto"><Button Class="pull-right" Clicked="TogglePinCode"><i class="fas @(iconClass)"></i></Button></Column>
                    </Row>
                </div>
            </div>
        </Column>
    }

</Row>



@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    List<LsProductItem> products = new List<LsProductItem>();
    string bearerToken;
    string username;
    string iconClass = "fas fa-eye";
    TextRole role = TextRole.Password;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        bearerToken = user.Claims.First(c => c.Type == "BearerToken").Value;
        username = user.Identity.Name;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var response = await LsClientWeb.GetProducts(new LsClientWeb_GetProductsRequest() { BearerToken = bearerToken, Username = username });
            products = response.Products;
            StateHasChanged();
        }

    }

    private void TogglePinCode()
    {
        if (role == TextRole.Password)
        {
            role = TextRole.Text;
            iconClass = "fas fa-eye-slash";
        }
        else
        {
            role = TextRole.Password;
            iconClass = "fas fa-eye";
        }

        StateHasChanged();
    }
}
